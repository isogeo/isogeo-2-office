# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pr:
- master

jobs:

# LINT AND FORMATTING CODE
- job: 'Lint'
  pool:
    vmImage: "windows-2019"

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'
      addToPath: true

  - script: |
      python -m pip install -U pip
      python -m pip install -U black
    displayName: 'Install black dependencies'

  - script: |
      python -m black --target-version=py37 .\modules
      python -m black --target-version=py37 .\IsogeoToOffice.py
    displayName: 'Apply black code formatting'

# LINT AND FORMATTING CODE
- job: 'Test'
  dependsOn: 'Lint'
  pool:
    vmImage: "windows-2019"

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'
      addToPath: true

  - script: |
      python -m pip install -U pip setuptools wheel
      python -m pip install -U -r ./requirements.txt
      python -m pip install -U pytest-cov
    displayName: 'Install dependencies'

  - script: |
        python .\tests\fixturing.py
    displayName: 'Preparing fixtures'

# BUILD
- job: 'Build'
  dependsOn: 'Test'
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      Python37_VS17_64bits:
        python.version: '3.7'
        python.arch: 'x64'
      Python37_VS17_32bits:
        python.version: '3.7'
        python.arch: 'x86'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(python.arch)'
      addToPath: True

  - script: |
      python -m pip install -U pip
      python -m pip install -U -r ./requirements.txt
      python -m pip install -U -r ./requirements_dev.txt
    displayName: 'Install dependencies'

  - script: |
      pylupdate5 -noobsolete -verbose isogeo2office.pro
      pyrcc5 resources.qrc -o resources_rc.py
      pyuic5 -x modules\\ui\\auth\\ui_authentication.ui -o modules\\ui\\auth\\ui_authentication.py"
      pyuic5 -x modules\\ui\\credits\\ui_credits.ui -o modules\\ui\\credits\\ui_credits.py
      pyuic5 -x modules\\ui\\main\\ui_win_IsogeoToOffice.ui -o modules\\ui\\main\\ui_win_IsogeoToOffice.py
    displayName: 'PyQt processing'

  - script: pyinstaller.exe -y bundle_isogeo2office.spec
    displayName: 'Building the executable with PyInstaller'

  # Archive Files
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'dist/isogeo2office'
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      archiveFile: '$(Build.ArtifactStagingDirectory)/IsogeoToOffice-$(python.arch)-$(Build.SourceBranchName)-b$(Build.BuildId).zip' 
      replaceExistingArchive: true 

  - task: CopyFiles@2
    displayName: 'Copy File to: $(TargetFolder)'
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)'
      Contents: 'IsogeoToOffice-$(python.arch)-$(Build.SourceBranchName)-b$(Build.BuildId).zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: IsogeoToOffice'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'
      ArtifactName: IsogeoToOffice
