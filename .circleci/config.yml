version: 2

defaults:
  workspace_root: &workspace_root
    ~/isogeo-to-office

  python_container: &python_container
    working_directory: *workspace_root
    docker:
      - image: circleci/python:3.6
        environment:
          PIPENV_VENV_IN_PROJECT: true

  golang_container: &golang_container
    working_directory: *workspace_root
    docker:
      - image: circleci/golang:1-stretch

  filters: &default_filters
    tags:
      only: '/v[0-9]+(\.[0-9]+)*/'

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  checkout:
    <<: *python_container
    steps:
      - checkout

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./

  build:
    <<: *python_container
    steps:
      - *attach_workspace
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages

      - restore_cache:
          name: Restore pipenv cache
          key: isogeo-to-office-pip-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install dependencies
          command: |
            sudo apt-get -y install python3-pyqt5 pyqt5-dev-tools
            sudo pip install pipenv
            pipenv install --dev
            pipenv run pip list

      - save_cache:
          name: Save pip cache
          key: isogeo-to-office-pip-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

      - run:
          name: Update PyQt UI - Translations
          command: pylupdate5 -noobsolete ./isogeo2office.pro

      - run:
          name: Update PyQt UI - Compiling resources
          command: pyrcc5 resources.qrc -o resources_rc.py

      - run:
          name: Packaging in Windows executable with PyInstaller
          command: |
            pipenv run pyinstaller -y --clean bundle_isogeo2office.spec

      - run:
          name: Zipping
          command: tar cvzf isogeo2office-{{ .Branch }}.tar.gz dist/isogeo2office

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/

  deploy-qa:
    <<: *golang_container
    steps:
      - *attach_workspace

      - run:
          name: Install rclone
          command: go get github.com/ncw/rclone

      - deploy:
          name: Upload to Azure Blob Storage
          command: rclone sync dist/isogeo2office-{{ .Branch }}.tar.gz qa:\$web/i2o_builds --delete-after --exclude .circleci/ --exclude Pipfile --exclude Pipfile.lock

  deploy-prod:
    <<: *golang_container
    steps:
      - *attach_workspace

      - run:
          name: Install rclone
          command: go get github.com/ncw/rclone

      - deploy:
          name: Upload to Azure Blob Storage
          command: rclone sync dist/isogeo2office-{{ .Branch }}.tar.gz prod:\$web/i2o_builds --delete-after


workflows:
  version: 2

  push:
    jobs:
      - checkout:
          filters: *default_filters

      - build:
          requires:
            - checkout
          filters: *default_filters

      - deploy-qa:
          requires:
            - build

      - deploy-prod:
          requires:
            - build
          filters:
            <<: *default_filters
            branches:
              ignore: /.*/
